# Hint: you can change the extension
# of the searched files via the argument, e.g.:
# minify_html '*.xml'

minify_html()
{
	# Hint: if the second argument is 'true',
	# HTML comments will be removed, e.g.:
	# minify_html '*.xml' 'true'

	local file
	local name='*.html'
	local process_html_comments='false'

	[ ! "${1}" = '' ] && name="${1}"
	[ ! "${2}" = '' ] && process_html_comments="${2}"

	find ${SSG__generated} -name "${name}" | while read file; do
		echo "Processing $(echo -n "${file}" | sed 's|'"${SSG__generated}"'||g')"

		sed -i -e ':a;N;$!ba;s/>\s*</></g' "${file}" # https://stackoverflow.com/questions/12376368/minify-html-files-in-text-html-templates
		"${process_html_comments}" && \
			sed -i 's/<!--\(.*\)*-->//g' "${file}" # https://superuser.com/questions/307768/how-to-remove-html-comment-tags-using-sed
	done
}
minify_css()
{
	local file
	local name='*.css'
	[ ! "${1}" = '' ] && name="${1}"

	find ${SSG__generated} -name "${name}" | while read file; do
		echo "Processing $(echo -n "${file}" | sed 's|'"${SSG__generated}"'||g')"

		sed -i -e 's/^[ \t]*//g; s/[ \t]*$//g; s/\([:{;,]\) /\1/g; s/ {/{/g; s/\/\*.*\*\///g; /^$/d' "${file}" # https://gist.github.com/dominicmartineau/5483359
		sed -i -e :a -e '$!N; s/\n\(.\)/\1/; ta' "${file}"
	done
}
minify_js()
{
	local file
	local name='*.js'
	[ ! "${1}" = '' ] && name="${1}"

	find ${SSG__generated} -name "${name}" | while read file; do
		echo "Processing $(echo -n "${file}" | sed 's|'"${SSG__generated}"'||g')"

		#sed -i -E 's@[[:blank:]]*(//|#).*@@;T;/./!d' "${file}" # https://unix.stackexchange.com/questions/383960/sed-stripping-comments-inline
		sed -i -E 's@[[:blank:]]*(//).*@@;T;/./!d' "${file}" # patched

		sed -i 's|/\*[^/]*\*/||g' "${file}"
		sed -i -e "s/^[ \t]*//g" -e "/^$/d" "${file}" # https://stackoverflow.com/questions/12376368/minify-html-files-in-text-html-templates
		sed -i ':a;N;$!ba;s/\n/ /g' "${file}" # https://stackoverflow.com/questions/1251999/how-can-i-replace-a-newline-n-using-sed
	done
}
