#!/usr/bin/env sh
# Tag list generator module
[ ! "${@}" = '' ] && exit 1
__module_name__='posts-tags'

# defaults variables
	posts__dbdir='posts'
	. "${SSG__modules}/posts/defaults.rc.d/posts.rc"
	. "${0%/*}/defaults.rc.d/posts-tags.rc"

# variables
	posts__tag_list='' # all tags list
	. "${SSG__lib}/import-includes.rc"
	. "${SSG__lib}/import-defaults.rc"
	[ "${posts_tags__generated_directory}" = '' ] && posts_tags__generated_directory='tag'

# directory in database
	if [ ! -e "${SSG__database}/${posts__dbdir}" ]; then
		echo '"'"${posts__dbdir}"'" directory not found in database'
		exit 1
	fi

# functions
	. "${0%/*}/../posts/generate_post_box.rc"

# database processing - read all tags
	for post in ${SSG__database}/${posts__dbdir}/public_*; do
		[ "${post}" = "${SSG__database}/${posts__dbdir}/public_*" ] && break

		for tag in ${post}/tags/*; do
			[ "${tag}" = "${post}/tags/*" ] && break
			posts__tag_list="${posts__tag_list} ${tag##*/}"
		done
	done

	[ ! "${posts__tag_list}" = '' ] && posts__tag_list="$(echo -n "${posts__tag_list}" | tr ' ' '\n' | sort -u)" # sort tag list

# tag list processing
	posts_tags__generate_tag_list()
	{
		local template__html_headers=''
		local template__html_title=''

		posts_tags__list_html_headers
		posts_tags__html_title

		echo -n "${posts_tags__list_header_content}"
		templates__current_get_part 'top'

		if ! templates__current_get_part 'resource' 'tags-list'; then
			echo "error: template ${templates__template} does not provide tags-list.rc" >&2
		fi

		templates__current_get_part 'bottom'
		echo -n "${posts_tags__list_footer_content}"
	}

	[ ! -e "${SSG__generated}/${posts_tags__generated_directory}" ] && mkdir -p "${SSG__generated}/${posts_tags__generated_directory}"

	if "${posts_tags__enable_tag_lists}"; then
		if "${posts_tags__parallel_rendering}"; then
			posts_tags__generate_tag_list >> "${SSG__generated}/${posts_tags__generated_directory}/${defaults__default_file_name}${defaults__default_file_extension}" &
		else
			posts_tags__generate_tag_list >> "${SSG__generated}/${posts_tags__generated_directory}/${defaults__default_file_name}${defaults__default_file_extension}"
		fi
	else
		echo 'Tag list generation is disabled'
	fi

# tag listings processing
	if [ ! "${posts__tag_list}" = '' ]; then
		posts_tags__generate_list()
		{
			echo " Processing page ${1}"

			local post
			local current_page_number="${1}" # for template
			local rendered_post
			local rendered_page_dir
			local template__html_headers=''
			local template__html_title=''

			posts_tags__listing_html_headers
			posts_tags__list_html_title

			# cache
			if [ "${current_page_number}" = '1' ]; then
				rendered_page_dir="${SSG__generated}/${posts_tags__generated_directory}/${tag}"
			else
				rendered_page_dir="${SSG__generated}/${posts_tags__generated_directory}/${tag}/${1}"
			fi

			[ ! -e "${rendered_page_dir}" ] && mkdir -p "${rendered_page_dir}"

			echo -n "${posts_tags__listing_header_content}" >> "${rendered_page_dir}/${defaults__default_file_name}${defaults__default_file_extension}"
			templates__current_get_part 'top' >> "${rendered_page_dir}/${defaults__default_file_name}${defaults__default_file_extension}"

			for post in ${2}; do
				post_name="${post##*/}"
				echo "  Adding post ${post_name##*_}"
				unset 'post_name'

				rendered_post="${post##*_}"

				generate_post_box >> "${rendered_page_dir}/${defaults__default_file_name}${defaults__default_file_extension}"

				unset 'rendered_post'
			done

			if ! templates__current_get_part 'resource' 'tags-pages' >> "${rendered_page_dir}/${defaults__default_file_name}${defaults__default_file_extension}"; then
				echo "error: template ${templates__template} does not provide tags-pages.rc"
			fi

			templates__current_get_part 'bottom' >> "${rendered_page_dir}/${defaults__default_file_name}${defaults__default_file_extension}"
			echo -n "${posts_tags__listing_footer_content}" >> "${rendered_page_dir}/${defaults__default_file_name}${defaults__default_file_extension}"
		}

		for tag in ${posts__tag_list}; do
			echo "Processing tag ${tag}"

			posts_tags__list=''
			posts_tags__list_limit_indicator='1'
			posts_tags__current_page_indicator='1'
			posts_tags__counted_posts='0'
			posts_tags__counted_posts_find="$(find ${SSG__database}/${posts__dbdir}/public_* -type f -path "*/tags/${tag}")" # cache

			for post in ${posts_tags__counted_posts_find}; do
				posts_tags__counted_posts="$((posts_tags__counted_posts+1))"
			done

			posts_tags__counted_pages="$(awk '
				BEGIN {
					printf \
						"%.0d", \
						('"${posts_tags__counted_posts}"'/'"${posts__posts_per_page}"')+0.9 \
				}
			')"

			unset 'posts_tags__counted_posts'

			for post in $(echo "${posts_tags__counted_posts_find}" | tac); do
				post="$(echo -n "${post}" | sed 's|/tags/'"${tag}"'||g')"
				posts_tags__list="${posts_tags__list} ${post}"

				if [ "${posts_tags__list_limit_indicator}" = "${posts__posts_per_page}" ]; then
					if "${posts_tags__parallel_rendering}"; then
						posts_tags__generate_list "${posts_tags__current_page_indicator}" "${posts_tags__list}" &
					else
						posts_tags__generate_list "${posts_tags__current_page_indicator}" "${posts_tags__list}"
					fi

					posts_tags__list=''
					posts_tags__list_limit_indicator='1'
					posts_tags__current_page_indicator="$((posts_tags__current_page_indicator+1))"

					continue
				fi

				posts_tags__list_limit_indicator="$((posts_tags__list_limit_indicator+1))"
			done

			[ ! "${posts_tags__list}" = '' ] && if "${posts_tags__parallel_rendering}"; then
				posts_tags__generate_list "${posts_tags__current_page_indicator}" "${posts_tags__list}" &
			else
				posts_tags__generate_list "${posts_tags__current_page_indicator}" "${posts_tags__list}"
			fi

			unset 'post'
			unset 'posts_tags__counted_pages'
			unset 'posts_tags__current_page_indicator'
			unset 'posts_tags__list_limit_indicator'
			unset 'posts_tags__list'
		done

		"${posts_tags__parallel_rendering}" && wait
	fi

# home page processing
	[ "${defaults__home_module}" = "${__module_name__}" ] && if "${posts_tags__enable_tag_lists}"; then
		echo 'This is default module - generating home page'
		mv "${SSG__generated}/${posts_tags__generated_directory}/${defaults__default_file_name}${defaults__default_file_extension}" "${SSG__generated}/${defaults__default_file_name}${defaults__default_file_extension}"
	else
		echo 'Error: posts_tags__enable_tag_lists is false - this module cannot be the default module'
		exit 1
	fi

exit 0
