#!/usr/bin/env sh
# Pages generator module
__module_name__='pages'

# defaults variables
	pages__dbdir='pages'
	. "${0%/*}/defaults.rc.d/pages.rc"

# variables'
	. "${SSG__lib}/import-includes.rc"
	. "${SSG__lib}/import-defaults.rc"

# directory in database
	if [ ! -e "${SSG__database}/${pages__dbdir}" ]; then
		echo '"'"${pages__dbdir}"'" directory not found in database'
		exit 1
	fi

# functions
	pages__render_script()
	{
		local script="${entrypoint%/*}/${1}"
		local scriptPath="$(echo -n "${script}" | sed 's|'"${SSG__database}/${pages__dbdir}/"'||g')"
		local renderedScriptPathSubpath="${3}"; [ ! "${renderedScriptPathSubpath}" = '' ] && renderedScriptPathSubpath="/${renderedScriptPathSubpath}"
		local renderedScriptPath="${SSG__generated}/${pages__generated_directory}${scriptPath%/*}${renderedScriptPathSubpath}"

		[ -e "${renderedScriptPath}" ] && echo "error: directory conflict on ${pages__generated_directory}${scriptPath%/*}"

		echo " Generating script ${scriptPath}"
		[ ! -e "${renderedScriptPath}" ] && mkdir -p "${renderedScriptPath}"
		. "${script}" >> "${renderedScriptPath}/${2}"
	}
	pages__copy_file()
	{
		local scriptLocation="${entrypoint%/*}"

		if [ "${renderedScriptPath}" = '' ]; then
			local scriptPath="$(echo -n "${entrypoint%/*}" | sed 's|'"${SSG__database}/${pages__dbdir}/"'||g')"
			local renderedScriptPath="${SSG__generated}/${pages__generated_directory}${scriptPath%/*}"
		fi

		if [ -e "${scriptLocation}/${1}" ]; then
			if [ -f "${scriptLocation}/${1}" ]; then
				echo " Copying file '${1}' to '${2}'" >&2
			elif [ -d "${scriptLocation}/${1}" ]; then
				echo " Copying directory '${1}' to '${2}'" >&2
			else
				echo " Copying '${1}' to '${2}'" >&2
			fi

			[ ! -e "${renderedScriptPath}" ] && mkdir "${renderedScriptPath}"
			cp -r "${scriptLocation}/${1}" "${renderedScriptPath}/${2}"
		else
			echo "  File ${scriptLocation}/${1} not exists" >&2
		fi
	}

# database processing
	for page in ${SSG__database}/${pages__dbdir}/*; do
		[ "${page}" = "${SSG__database}/${pages__dbdir}/*" ] && break

		if [ -d "${page}" ]; then
			echo "Generating page '${page##*/}'"
			if "${pages__parallel_rendering}"; then
				find "${page}" -name 'entrypoint.rc' | while read entrypoint; do
					unset 'page'
					. "${entrypoint}"
				done &
			else
				find "${page}" -name 'entrypoint.rc' | while read entrypoint; do
					unset 'page'
					. "${entrypoint}"
				done
			fi
		fi
	done
	"${pages__parallel_rendering}" && wait

# home page processing
	. "${SSG__lib}/import-includes.rc"
	[ "${defaults__home_module}" = "${__module_name__}" ] && if [ "${pages__default_page}" = '' ]; then
		echo 'pages__default_page is empty - home page not copied'
	else
		echo "This is default module - moving '${pages__default_page}' page"

		if [ -e "${SSG__generated}/${pages__generated_directory}${pages__default_page}/${defaults__default_file_name}${defaults__default_file_extension}" ]; then
			mv "${SSG__generated}/${pages__generated_directory}${pages__default_page}/${defaults__default_file_name}${defaults__default_file_extension}" "${SSG__generated}/${defaults__default_file_name}${defaults__default_file_extension}"
			rmdir "${SSG__generated}/${pages__generated_directory}${pages__default_page}" # will be failed if other files were copied
		else
			echo "${pages__generated_directory}${pages__default_page}/${defaults__default_file_name}${defaults__default_file_extension} not found in generated files"
		fi
	fi

exit 0
