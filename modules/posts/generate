#!/usr/bin/env sh
# post generator module

# defaults variables
	. "${0%/*}/defaults.rc.d/posts.rc"

# variables
	posts__ind='1'; posts__ind_pages='1'; posts__page='1' # indicators
	. "${SSG__lib}/import-includes.rc"
	. "${SSG__lib}/import-defaults.rc"

# directory in database
	if [ ! -e "${SSG__database}/posts" ]; then
		echo '"posts" directory not found in database'
		exit 1
	fi

# functions
	generatePostBox()
	{
		if [ ! "${1}" = 'noTitleLink' ]; then  # for post metadata
			. "${post}/meta.rc"
			template_no_title_link='false'
		else
			template_no_title_link='true'
		fi

		if [ -e "${post}/tags" ]; then
			local tag
			local posts__post_tags
			for tag in ${post}/tags/*; do
				[ "${tag}" = "${post}/tags/*" ] && break
				posts__post_tags="${posts__post_tags} #${tag##*/}"
			done
			posts__post_tags="${posts__post_tags#?}"
			unset tag
		fi

		if ! template__get_part "${defaults__template}" 'resource' 'posts-content'; then
			echo "error: template ${defaults__template} does not provide posts-content.rc" >&2
		fi

		unset posts__post_title; unset posts__post_date; unset posts__post_tags
		unset template_no_title_link
	}

# database preprocessing - count pages
	posts__counted_posts='1'
	for post in ${SSG__database}/posts/public_*; do
		[ "${post}" = "${SSG__database}/posts/public_*" ] && break
		posts__counted_posts="$((posts__counted_posts+1))"
	done

	posts__counted_pages="$(echo "${posts__counted_posts} ${posts__posts_per_page}" | awk '{print ($1/$2)+0.9}' | awk '{printf "%.0d", $1}')"

	unset post
	unset posts__counted_posts

# database processing
	for post in ${SSG__database}/posts/public_*; do
		if [ "${post}" = "${SSG__database}/posts/public_*" ]; then
			echo 'No published posts found in database'
			break
		fi

		postName="${post##*/}"
		echo "Generating published post ${postName##*_}"
		unset postName

		renderedPostDir="${post##*/}"; renderedPostDir="${renderedPostDir##*_}"; renderedPostDir="${SSG__generated}/${posts__generated_post_directory}${renderedPostDir}" # cache
		[ ! -e "${renderedPostDir}" ] && mkdir -p "${renderedPostDir}"

		. "${post}/meta.rc" # for template settings
		[ ! "${posts__post_title}" = '' ] && template__html_title="${posts__post_title}" # set html title

		template__get_part "${defaults__template}" 'top' >> "${renderedPostDir}/${defaults__default_file_name}${defaults__default_file_extension}"
		generatePostBox 'noTitleLink' >> "${renderedPostDir}/${defaults__default_file_name}${defaults__default_file_extension}"
		template__get_part "${defaults__template}" 'bottom' >> "${renderedPostDir}/${defaults__default_file_name}${defaults__default_file_extension}"
	done
	for post in ${SSG__database}/posts/hidden_*; do
		if [ "${post}" = "${SSG__database}/posts/hidden_*" ]; then
			echo 'No hidden posts found in database'
			break
		fi

		postName="${post##*/}"
		echo "Generating hidden post ${postName##*_}"
		unset postName

		renderedPostDir="${post##*/}"; renderedPostDir="${renderedPostDir##*_}"; renderedPostDir="${SSG__generated}/${posts__generated_post_directory}${renderedPostDir}" # cache
		[ ! -e "${renderedPostDir}" ] && mkdir -p "${renderedPostDir}"

		. "${post}/meta.rc" # for template settings
		[ ! "${posts__post_title}" = '' ] && template__html_title="${posts__post_title}" # set html title

		template__get_part "${defaults__template}" 'top' >> "${renderedPostDir}/${defaults__default_file_name}${defaults__default_file_extension}"
		generatePostBox 'noTitleLink' >> "${renderedPostDir}/${defaults__default_file_name}${defaults__default_file_extension}"
		template__get_part "${defaults__template}" 'bottom' >> "${renderedPostDir}/${defaults__default_file_name}${defaults__default_file_extension}"
	done

# posts list processing
	posts__generate_list()
	{
		local post
		local currentPageNumber="${1}" # for template
		local renderedPostDir="${SSG__generated}/${posts__generated_page_directory}${currentPageNumber}" # cache
		local template__html_title="${posts__list_html_title}"

		echo "Processing page ${currentPageNumber}"

		"${posts__no_first_page_mode}" && [ "${currentPageNumber}" = '1' ] && \
			renderedPostDir="${SSG__generated}/${posts__generated_page_directory}"

		[ ! -e "${renderedPostDir}" ] && mkdir -p "${renderedPostDir}"

		template__get_part "${defaults__template}" 'top' >> "${renderedPostDir}/${defaults__default_file_name}${defaults__default_file_extension}"

		for post in ${2}; do
			echo " Adding post ${post##*/}"

			local renderedPost="${post##*_}"
			generatePostBox >> "${renderedPostDir}/${defaults__default_file_name}${defaults__default_file_extension}"
			unset renderedPost
		done

		if ! template__get_part "${defaults__template}" 'resource' 'posts-pages' >> "${renderedPostDir}/${defaults__default_file_name}${defaults__default_file_extension}"; then
			echo "error: template ${defaults__template} does not provide posts-pages.rc"
		fi

		template__get_part "${defaults__template}" 'bottom' >> "${renderedPostDir}/${defaults__default_file_name}${defaults__default_file_extension}"
	}

	# reverse order
	posts__post_pivot=''
	for post in ${SSG__database}/posts/public_*; do
		posts__post_pivot="${post} ${posts__post_pivot}"
	done
	post="${posts__post_pivot}"
	unset posts__post_pivot

	posts__list=''
	posts__list_limit_indicator='1'
	posts__current_page_indicator='1'

	for post in ${post}; do
		if [ "${post}" = "${SSG__database}/posts/public_*" ]; then

			mkdir -p "${SSG__generated}/${posts__generated_page_directory}1"
			template__get_part "${defaults__template}" 'top' >> "${SSG__generated}/${posts__generated_page_directory}1/${defaults__default_file_name}${defaults__default_file_extension}"
			echo "${posts__label_not_found}" >> "${SSG__generated}/${posts__generated_page_directory}1/${defaults__default_file_name}${defaults__default_file_extension}"
			template__get_part "${defaults__template}" 'bottom' >> "${SSG__generated}/${posts__generated_page_directory}1/${defaults__default_file_name}${defaults__default_file_extension}"

			break
		fi

		posts__list="${posts__list} ${post}"
		if [ "${posts__list_limit_indicator}" = "${posts__posts_per_page}" ]; then
			posts__generate_list "${posts__current_page_indicator}" "${posts__list}"

			posts__list=''
			posts__list_limit_indicator='1'
			posts__current_page_indicator="$((posts__current_page_indicator+1))"
		else
			posts__list_limit_indicator="$((posts__list_limit_indicator+1))"
		fi
	done
	[ ! "${posts__list}" = '' ] && posts__generate_list "${posts__current_page_indicator}" "${posts__list}"

	unset post
	unset posts__current_page_indicator
	unset posts__list_limit_indicator
	unset posts__list

	unset posts__generate_list

# home page processing
	if [ "${defaults__home_module}" = 'posts' ]; then
		echo "This is default module - generating home page"
		if "${posts__no_first_page_mode}" && [ -e "${SSG__generated}/${posts__generated_page_directory}/${defaults__default_file_name}${defaults__default_file_extension}" ]; then
			cp "${SSG__generated}/${posts__generated_page_directory}/${defaults__default_file_name}${defaults__default_file_extension}" "${SSG__generated}/${defaults__default_file_name}${defaults__default_file_extension}"
		elif [ -e "${SSG__generated}/${posts__generated_page_directory}1/${defaults__default_file_name}${defaults__default_file_extension}" ]; then
			cp "${SSG__generated}/${posts__generated_page_directory}1/${defaults__default_file_name}${defaults__default_file_extension}" "${SSG__generated}/${defaults__default_file_name}${defaults__default_file_extension}"
		else
			echo "Generating 'no posts found'"
			template__get_part "${defaults__template}" 'top' >> "${SSG__generated}/${defaults__default_file_name}${defaults__default_file_extension}"
			echo "${posts__label_not_found}" >> "${SSG__generated}/${defaults__default_file_name}${defaults__default_file_extension}"
			template__get_part "${defaults__template}" 'bottom' >> "${SSG__generated}/${defaults__default_file_name}${defaults__default_file_extension}"
		fi
	fi

exit 0
