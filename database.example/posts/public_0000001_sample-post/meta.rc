# always unset this at the beginning of each meta.rc!
unset 'posts__post_id'

# use queue number as post id (class="post-id-0000001") (optional)
posts__post_id="${post##*/}"; posts__post_id="${posts__post_id#*_}"; posts__post_id="${posts__post_id%%_*}"

# if you have an arch_* file in your post directory, you can read the date from it
#for posts__post_date in ${post}/arch_*; do break; done
#posts__post_date_raw="${posts__post_date##*_}"
#posts__post_date="$(echo ${posts__post_date_raw} | awk -F'-' '{ printf("%02d.%02d.%04d", $3, $2, $1) }')"

# set post metadata
posts__post_title="Sample post &numero; $(echo -n ${posts__post_id} | sed 's/^0*//')"
posts__post_date='21.12.2020' # remove if you read date from arch_* filename

# disable post plugins
#posts__post_plugins='false'

# hide div post-title
#template__html_title="${posts__post_title} - ${template__site_title}"
#posts__post_title=''

# set RSS publication date and description for post-rss module
if [ "${__module_name__}" = 'posts-rss' ]; then
	posts_rss__post_title="$(echo "${posts__post_title}" | sed 's/\&/\&amp;/g; s/</\&lt;/g; s/>/\&gt;/g')" # escape html chars
	posts_rss__post_description='Sample post'
	posts_rss__post_pubdate='Mon, 21 Dec 2020 00:00:00 +0100'

	# hint: you can add the content of the post to the feed
	#posts_rss__post_description="$(. "${post}/content.rc" | sed 's/\&/\&amp;/g; s/</\&lt;/g; s/>/\&gt;/g')"

	# hint: if you use BusyBox you can automate the date conversion:
	#posts_rss__post_pubdate="$(date -d ${posts__post_date} -D '%d.%m.%Y' '+%a, %d %b %Y %T %z')"

	# hint: you can add your xml code to the <item> tag
	#posts_rss__post_xml='<author>admin@bash.ssg</author>'
fi

# additional HTML headers
template__html_headers='<!-- this code will be displayed in this posts page header -->'

# SEO HTML headers
# hint: if you use BusyBox you can automate the date conversion:
#  <meta property="article:published_time" content="'"$(date -d ${posts__post_date} -D '%d.%m.%Y' '+%Y-%m-%dT%H:%M:%S%z')"'">
if [ ! "${__module_name__}" = 'posts-rss' ]; then
	template__html_headers="${template__html_headers}"'
		<meta property="article:author" content="BashSsgAdmin">
		<meta property="article:published_time" content="2020-12-21T00:00:00+01:00">
		<meta name="description" content="Post directory name: '"${post##*/}"' where public notices script that post is published">
	'

	for post_tag in ${post}/tags/*; do
		[ "${post_tag}" = "${post}/tags/*" ] && break

		template__html_headers="${template__html_headers}"'<meta property="article:tag" content="'"${post_tag##*/}"'">'
	done

	unset 'post_tag'
fi

# add metadata for sitemap module
if [ "${__module_name__}" = 'posts' ] && [ "${1}" = 'no_title_link' ]; then
	#echo '' > "${rendered_post_dir}/exclude-from-sitemap"
	echo '2020-12-21' > "${rendered_post_dir}/sitemap-lastmod"
	echo 'always' > "${rendered_post_dir}/sitemap-changefreq"
	echo '0.9' > "${rendered_post_dir}/sitemap-priority"

	# hint: you can automate lastmod date conversion
	#echo "${posts__post_date}" | awk -F'.' '{ printf("%04d-%02d-%02d", $3, $2, $1) }' > "${rendered_post_dir}/sitemap-lastmod"

	# hint: if you read the date from the arch_* filename you can use it in its raw form
	#echo "${posts__post_date_raw}" > "${rendered_post_dir}/sitemap-lastmod"
fi

# copy additional files or directories (posts__copy_file input-file-or-dir output-file-or-dir)
if [ "${__module_name__}" = 'posts' ] && [ "${1}" = 'no_title_link' ]; then
	posts__copy_file 'assets/post-font.css' 'style.css' # copy one file to generated/post/sample-post directory
	#posts__copy_file 'assets' 'assets' # copy the whole directory to generated/post/sample-post

	# you can replace the ${rendered_post_url} string with /post/sample-post in generated/post/sample-post/style.css
	#sed -i 's|\${rendered_post_url}|'"${defaults__url_prefix}/${posts__generated_post_directory}${post##*_}"'|g' "${rendered_post_dir}/style.css"
fi
